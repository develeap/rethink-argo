apiVersion: argoproj.io/v1alpha1
kind: AppProject
metadata:
  annotations:
    argocd-autopilot.argoproj-labs.io/default-dest-server: https://kubernetes.default.svc
    argocd.argoproj.io/sync-options: PruneLast=true
    argocd.argoproj.io/sync-wave: '-2'
  creationTimestamp:
  name: production
  namespace: argocd
spec:
  clusterResourceWhitelist:
    - group: '*'
      kind: '*'
  description: production project
  destinations:
    - namespace: '*'
      server: https://kubernetes.default.svc
      name: prod
  namespaceResourceWhitelist:
    - group: '*'
      kind: '*'
  sourceRepos:
    - https://github.com/develeap/rethink-argo.git
    - https://github.com/argoproj-labs/argocd-autopilot.git
  permitOnlyProjectScopedClusters: true
status: {}
---
apiVersion: argoproj.io/v1alpha1
kind: ApplicationSet
metadata:
  annotations:
    argocd.argoproj.io/sync-wave: '0'
  creationTimestamp:
  name: production
  namespace: argocd
spec:
  generators:
    - git:
        files:
          - path: apps/**/production/config.json
        repoURL: https://github.com/develeap/rethink-argo.git
        requeueAfterSeconds: 20
        revision: ''
        template:
          metadata: {}
          spec:
            destination: {}
            project: ''
    - git:
        files:
          - path: apps/**/production/config_dir.json
        repoURL: https://github.com/develeap/rethink-argo.git
        requeueAfterSeconds: 20
        revision: ''
        template:
          metadata: {}
          spec:
            destination: {}
            project: ''
            source:
              directory:
                exclude: '{{ exclude }}'
                include: '{{ include }}'
                jsonnet: {}
                recurse: true
              repoURL: ''
  syncPolicy: {}
  template:
    metadata:
      labels:
        app.kubernetes.io/managed-by: argocd-autopilot
        app.kubernetes.io/name: '{{ appName }}'
      name: production-{{ userGivenName }}
      namespace: argocd
    spec:
      permitOnlyProjectScopedClusters: true
      destination:
        namespace: '{{ destNamespace }}'
        server: '{{ destServer }}'
      ignoreDifferences:
        - group: argoproj.io
          jsonPointers: [/status]
          kind: Application
      project: production
      source:
        path: '{{ srcPath }}'
        repoURL: '{{ srcRepoURL }}'
        targetRevision: '{{ srcTargetRevision }}'
      syncPolicy:
        automated:
          allowEmpty: true
          prune: true
          selfHeal: true
status: {}
